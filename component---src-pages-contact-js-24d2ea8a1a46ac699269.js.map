{"version":3,"file":"component---src-pages-contact-js-24d2ea8a1a46ac699269.js","mappings":"wNAsJA,MAnJoBA,KAClB,MAAM,EAACC,EAAS,EAACC,IAAeC,EAAAA,EAAAA,UAAS,CACvCC,KAAM,GACNC,MAAO,GACPC,QAAS,MAEL,EAACC,EAAO,EAACC,IAAaL,EAAAA,EAAAA,UAAS,CAAC,IAChC,EAACM,EAAO,EAACC,IAAaP,EAAAA,EAAAA,UAAS,CAAEQ,KAAM,GAAIL,QAAS,MACpD,EAACM,EAAa,EAACC,IAAmBV,EAAAA,EAAAA,WAAS,GAE3CW,EAAgBC,IACpB,MAAM,KAAEX,EAAI,MAAEY,GAAUD,EAAEE,OAC1Bf,GAAYgB,IAAI,IACXA,EACH,CAACd,GAAOY,MAGNT,EAAOH,IACTI,GAAUU,IAAI,IACTA,EACH,CAACd,GAAO,MAEZ,EAuCF,OACEe,EAAAA,cAAA,QAAMC,SArCaC,UACnBN,EAAEO,iBACFT,GAAgB,GAChBH,EAAU,CAAEC,KAAM,GAAIL,QAAS,KAG/B,MAAMiB,GAAmBC,EAAAA,EAAAA,GAAoBvB,GAC7C,GAAIwB,OAAOC,KAAKH,GAAkBI,OAAS,EAGzC,OAFAnB,EAAUe,QACVV,GAAgB,GAIlB,IASE,WARuBe,MAAMC,CAAAA,EAAYC,0BAA2B,CAClEC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUlC,MAGVmC,GAKX,MAAM,IAAIC,MAAM,0BAJhB3B,EAAU,CAAEC,KAAM,UAAWL,QAAS,+BACtCJ,EAAY,CAAEE,KAAM,GAAIC,MAAO,GAAIC,QAAS,KAC5CE,EAAU,CAAC,EAIf,CAAE,MAAO8B,GACP5B,EAAU,CAAEC,KAAM,SAAUL,QAAS,6CACvC,CAAC,QACCO,GAAgB,EAClB,GAI8B0B,UAAU,aACrC9B,EAAOH,SACNa,EAAAA,cAAA,OAAKoB,UAAW,wBACE,YAAhB9B,EAAOE,KACH,oEACA,8DAEHF,EAAOH,SAIZa,EAAAA,cAAA,OAAKoB,UAAU,aACbpB,EAAAA,cAAA,SAAOqB,QAAQ,OAAOD,UAAU,gEAA+D,QAG/FpB,EAAAA,cAAA,SACER,KAAK,OACLP,KAAK,OACLqC,GAAG,OACHzB,MAAOf,EAASG,KAChBsC,SAAU5B,EACVyB,UAAW,oHACThC,EAAOH,KACH,qCACA,4CAGPG,EAAOH,MACNe,EAAAA,cAAA,KAAGoB,UAAU,+CAA+ChC,EAAOH,OAIvEe,EAAAA,cAAA,OAAKoB,UAAU,aACbpB,EAAAA,cAAA,SAAOqB,QAAQ,QAAQD,UAAU,gEAA+D,SAGhGpB,EAAAA,cAAA,SACER,KAAK,QACLP,KAAK,QACLqC,GAAG,QACHzB,MAAOf,EAASI,MAChBqC,SAAU5B,EACVyB,UAAW,oHACThC,EAAOF,MACH,qCACA,4CAGPE,EAAOF,OACNc,EAAAA,cAAA,KAAGoB,UAAU,+CAA+ChC,EAAOF,QAIvEc,EAAAA,cAAA,OAAKoB,UAAU,aACbpB,EAAAA,cAAA,SAAOqB,QAAQ,UAAUD,UAAU,gEAA+D,WAGlGpB,EAAAA,cAAA,YACEf,KAAK,UACLqC,GAAG,UACHzB,MAAOf,EAASK,QAChBoC,SAAU5B,EACV6B,KAAK,IACLJ,UAAW,oHACThC,EAAOD,QACH,qCACA,4CAGPC,EAAOD,SACNa,EAAAA,cAAA,KAAGoB,UAAU,+CAA+ChC,EAAOD,UAIvEa,EAAAA,cAAA,UACER,KAAK,SACL4B,UAAU,kIACVK,SAAUhC,GAETA,EAAe,aAAe,gBAE5B,EC9HX,MAboBiC,IAClB1B,EAAAA,cAAC2B,EAAAA,EAAM,KACL3B,EAAAA,cAAC4B,EAAAA,EAAG,CAACC,MAAM,iBAAiBC,SAAU,CAAC,SAAS,UAAW,yBAC3D9B,EAAAA,cAAA,OAAKoB,UAAU,6BACbpB,EAAAA,cAAC+B,EAAAA,EAAgB,MACjB/B,EAAAA,cAAA,OAAKoB,UAAU,+BACbpB,EAAAA,cAACnB,EAAW,OAEdmB,EAAAA,cAACgC,EAAAA,EAAa,O","sources":["webpack://portfolio/./src/components/ContactForm.js","webpack://portfolio/./src/pages/contact.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { validateContactForm } from '../utils/validation';\n\nconst ContactForm = () => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    message: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [status, setStatus] = useState({ type: '', message: '' });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    // Clear error when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    setStatus({ type: '', message: '' });\n\n    // Validate form\n    const validationErrors = validateContactForm(formData);\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n      setIsSubmitting(false);\n      return;\n    }\n\n    try {\n      const response = await fetch(process.env.GATSBY_FORMSPREE_ENDPOINT, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n\n      if (response.ok) {\n        setStatus({ type: 'success', message: 'Message sent successfully!' });\n        setFormData({ name: '', email: '', message: '' });\n        setErrors({});\n      } else {\n        throw new Error('Failed to send message');\n      }\n    } catch (error) {\n      setStatus({ type: 'danger', message: 'Failed to send message. Please try again.' });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-6\">\n      {status.message && (\n        <div className={`p-4 mb-4 rounded-md ${\n          status.type === 'success' \n            ? 'bg-green-100 text-green-800 dark:bg-green-800 dark:text-green-100' \n            : 'bg-red-100 text-red-800 dark:bg-red-800 dark:text-red-100'\n        }`}>\n          {status.message}\n        </div>\n      )}\n      \n      <div className=\"space-y-2\">\n        <label htmlFor=\"name\" className=\"block text-sm font-medium text-slate-700 dark:text-slate-300\">\n          Name\n        </label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          id=\"name\"\n          value={formData.name}\n          onChange={handleChange}\n          className={`w-full px-3 py-2 bg-white dark:bg-slate-700 border rounded-md focus:outline-none focus:ring-2 focus:ring-accent ${\n            errors.name \n              ? 'border-red-500 dark:border-red-400' \n              : 'border-slate-300 dark:border-slate-600'\n          }`}\n        />\n        {errors.name && (\n          <p className=\"mt-1 text-sm text-red-500 dark:text-red-400\">{errors.name}</p>\n        )}\n      </div>\n      \n      <div className=\"space-y-2\">\n        <label htmlFor=\"email\" className=\"block text-sm font-medium text-slate-700 dark:text-slate-300\">\n          Email\n        </label>\n        <input\n          type=\"email\"\n          name=\"email\"\n          id=\"email\"\n          value={formData.email}\n          onChange={handleChange}\n          className={`w-full px-3 py-2 bg-white dark:bg-slate-700 border rounded-md focus:outline-none focus:ring-2 focus:ring-accent ${\n            errors.email \n              ? 'border-red-500 dark:border-red-400' \n              : 'border-slate-300 dark:border-slate-600'\n          }`}\n        />\n        {errors.email && (\n          <p className=\"mt-1 text-sm text-red-500 dark:text-red-400\">{errors.email}</p>\n        )}\n      </div>\n      \n      <div className=\"space-y-2\">\n        <label htmlFor=\"message\" className=\"block text-sm font-medium text-slate-700 dark:text-slate-300\">\n          Message\n        </label>\n        <textarea\n          name=\"message\"\n          id=\"message\"\n          value={formData.message}\n          onChange={handleChange}\n          rows=\"5\"\n          className={`w-full px-3 py-2 bg-white dark:bg-slate-700 border rounded-md focus:outline-none focus:ring-2 focus:ring-accent ${\n            errors.message \n              ? 'border-red-500 dark:border-red-400' \n              : 'border-slate-300 dark:border-slate-600'\n          }`}\n        ></textarea>\n        {errors.message && (\n          <p className=\"mt-1 text-sm text-red-500 dark:text-red-400\">{errors.message}</p>\n        )}\n      </div>\n      \n      <button \n        type=\"submit\" \n        className=\"px-6 py-2 text-white bg-accent hover:bg-accent-600 disabled:opacity-50 disabled:cursor-not-allowed rounded-md transition-colors\"\n        disabled={isSubmitting}\n      >\n        {isSubmitting ? 'Sending...' : 'Send Message'}\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;","import React from 'react'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport PortfolioSideBar from '../components/PortfolioSideBar'\nimport SkillsSideBar from '../components/SkillsSideBar'\nimport ContactForm from '../components/ContactForm'\n\nconst ContactPage = () => (\n  <Layout>\n    <SEO title=\"Contact Sanjay\" keywords={[`Sanjay`,`contact`, `Fullstack developer`]} />\n    <div className=\"flex flex-col lg:flex-row\">\n      <PortfolioSideBar />\n      <div className=\"w-full lg:w-2/3 mx-auto p-4\">\n        <ContactForm />\n      </div>\n      <SkillsSideBar />\n    </div>\n  </Layout>\n)\n\nexport default ContactPage"],"names":["ContactForm","formData","setFormData","useState","name","email","message","errors","setErrors","status","setStatus","type","isSubmitting","setIsSubmitting","handleChange","e","value","target","prev","React","onSubmit","async","preventDefault","validationErrors","validateContactForm","Object","keys","length","fetch","process","GATSBY_FORMSPREE_ENDPOINT","method","headers","body","JSON","stringify","ok","Error","error","className","htmlFor","id","onChange","rows","disabled","ContactPage","Layout","SEO","title","keywords","PortfolioSideBar","SkillsSideBar"],"sourceRoot":""}