{"version":3,"sources":["webpack:///./src/components/ui/Timeline/styles.ts","webpack:///./src/components/ui/Timeline/index.tsx","webpack:///./src/components/Experience/index.tsx","webpack:///./src/components/Education/index.tsx","webpack:///./src/components/ui/ProgressBar/styles.ts","webpack:///./src/components/ui/ProgressBar/index.tsx","webpack:///./src/components/Skills/styles.ts","webpack:///./src/components/Skills/index.tsx","webpack:///./src/pages/resume.tsx","webpack:///./src/components/ui/Button/styles.ts","webpack:///./src/components/ui/Button/index.tsx","webpack:///./src/components/ui/Banner/styles.ts","webpack:///./src/components/ui/Banner/index.tsx","webpack:///./src/components/HeroBanner/index.tsx","webpack:///./src/components/utils/FormatHtml/index.tsx"],"names":["Timeline","styled","div","Details","Content","Title","Subtitle","Date","Point","span","title","subtitle","content","startDate","endDate","Experience","useStaticQuery","markdownRemark","allMarkdownRemark","sectionTitle","frontmatter","experiences","edges","Container","section","TitleSection","map","item","node","id","html","company","position","key","FormatHtml","Education","education","university","degree","ProgressBar","BarWrapper","Bar","percentage","h3","Percentage","Skills","Skill","skills","center","ResumePage","Layout","SEO","HeroBanner","hideProfileButton","Button","motion","custom","button","primary","block","children","whileHover","scale","whileTap","Banner","p","linkTo","linkText","hideLink","to","className","dangerouslySetInnerHTML","__html"],"mappings":"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","file":"component---src-pages-resume-tsx-58c7e3220ac62aa55c0b.js","sourcesContent":["import styled from 'styled-components';\nimport tw from 'tailwind.macro';\n\nexport const Timeline = styled.div`\n  ${tw`flex flex-col sm:flex-row w-full p-4 relative border-l border-indigo-200`};\n\n  &:last-child {\n    ${tw`pb-0`};\n  }\n`;\n\nexport const Details = styled.div`\n  ${tw`w-full sm:w-1/3`};\n`;\n\nexport const Content = styled.div`\n  ${tw`w-full sm:w-2/3 mt-4 sm:mt-0`};\n`;\n\nexport const Title = styled.div`\n  ${tw`font-semibold mt-3`};\n`;\n\nexport const Subtitle = styled.div`\n  ${tw`text-xs`};\n`;\n\nexport const Date = styled.div`\n  ${tw`text-xs border  border-teal-400 rounded-full px-2`};\n  width: fit-content;\n`;\n\nexport const Point = styled.span`\n  ${tw`w-3 h-3 border border-indigo-200 bg-indigo-100 rounded-full absolute`};\n  left: -6px;\n  top: 20px;\n`;\n","import React from 'react';\n\nimport * as Styled from './styles';\n\ninterface Props {\n  title: string;\n  subtitle: string;\n  content: React.ReactNode;\n  startDate: string;\n  endDate: string;\n}\n\nconst Timeline: React.FC<Props> = ({ title, subtitle, content, startDate, endDate }) => (\n  <Styled.Timeline>\n    <Styled.Point />\n    <Styled.Details>\n      <Styled.Date>\n        {startDate} - {endDate}\n      </Styled.Date>\n      <Styled.Title>{title}</Styled.Title>\n      <Styled.Subtitle>{subtitle}</Styled.Subtitle>\n    </Styled.Details>\n    <Styled.Content>{content}</Styled.Content>\n  </Styled.Timeline>\n);\n\nexport default Timeline;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Timeline from 'components/ui/Timeline';\nimport Container from 'components/ui/Container';\nimport TitleSection from 'components/ui/TitleSection';\nimport FormatHtml from 'components/utils/FormatHtml';\n\nimport { SectionTitle } from 'helpers/definitions';\n\ninterface Experience {\n  node: {\n    id: string;\n    html: React.ReactNode;\n    frontmatter: {\n      company: string;\n      position: string;\n      startDate: string;\n      endDate: string;\n    };\n  };\n}\n\nconst Experience: React.FC = () => {\n  const { markdownRemark, allMarkdownRemark } = useStaticQuery(graphql`\n    query {\n      markdownRemark(frontmatter: { category: { eq: \"experiences section\" } }) {\n        frontmatter {\n          title\n          subtitle\n        }\n      }\n      allMarkdownRemark(\n        filter: { frontmatter: { category: { eq: \"experiences\" } } }\n        sort: { order: DESC, fields: fileAbsolutePath }\n      ) {\n        edges {\n          node {\n            id\n            html\n            frontmatter {\n              company\n              position\n              startDate\n              endDate\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const sectionTitle: SectionTitle = markdownRemark.frontmatter;\n  const experiences: Experience[] = allMarkdownRemark.edges;\n\n  return (\n    <Container section>\n      <TitleSection title={sectionTitle.title} subtitle={sectionTitle.subtitle} />\n\n      {experiences.map((item) => {\n        const {\n          id,\n          html,\n          frontmatter: { company, position, startDate, endDate }\n        } = item.node;\n\n        return (\n          <Timeline\n            key={id}\n            title={company}\n            subtitle={position}\n            content={<FormatHtml content={html} />}\n            startDate={startDate}\n            endDate={endDate}\n          />\n        );\n      })}\n    </Container>\n  );\n};\n\nexport default Experience;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Timeline from 'components/ui/Timeline';\nimport Container from 'components/ui/Container';\nimport TitleSection from 'components/ui/TitleSection';\nimport FormatHtml from 'components/utils/FormatHtml';\n\nimport { SectionTitle } from 'helpers/definitions';\n\ninterface Education {\n  node: {\n    id: string;\n    html: React.ReactNode;\n    frontmatter: {\n      university: string;\n      degree: string;\n      startDate: string;\n      endDate: string;\n    };\n  };\n}\n\nconst Education: React.FC = () => {\n  const { markdownRemark, allMarkdownRemark } = useStaticQuery(graphql`\n    query {\n      markdownRemark(frontmatter: { category: { eq: \"education section\" } }) {\n        frontmatter {\n          title\n          subtitle\n        }\n      }\n      allMarkdownRemark(\n        filter: { frontmatter: { category: { eq: \"education\" } } }\n        sort: { order: DESC, fields: fileAbsolutePath }\n      ) {\n        edges {\n          node {\n            id\n            html\n            frontmatter {\n              university\n              degree\n              startDate\n              endDate\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const sectionTitle: SectionTitle = markdownRemark.frontmatter;\n  const education: Education[] = allMarkdownRemark.edges;\n\n  return (\n    <Container section>\n      <TitleSection title={sectionTitle.title} subtitle={sectionTitle.subtitle} />\n\n      {education.map((item) => {\n        const {\n          id,\n          html,\n          frontmatter: { university, degree, startDate, endDate }\n        } = item.node;\n\n        return (\n          <Timeline\n            key={id}\n            title={university}\n            subtitle={degree}\n            content={<FormatHtml content={html} />}\n            startDate={startDate}\n            endDate={endDate}\n          />\n        );\n      })}\n    </Container>\n  );\n};\n\nexport default Education;\n","import styled from 'styled-components';\nimport tw from 'tailwind.macro';\n\nexport interface StyledProps {\n  percentage: number;\n}\n\nexport const ProgressBar = styled.div`\n  ${tw`p-3`};\n`;\n\nexport const BarWrapper = styled.div`\n  ${tw`w-full h-2 bg-gray-300 rounded overflow-hidden mt-1`};\n`;\n\nexport const Bar = styled.div<StyledProps>`\n  ${tw`h-2 bg-teal-400`};\n  width: ${({ percentage }) => `${percentage}%`};\n`;\n\nexport const Content = styled.div`\n  ${tw`w-full flex justify-between`};\n`;\n\nexport const Title = styled.h3`\n  ${tw`font-semibold`};\n`;\n\nexport const Percentage = styled.h3`\n  ${tw`font-semibold`};\n`;\n","import React from 'react';\n\nimport * as Styled from './styles';\n\ninterface Props extends Styled.StyledProps {\n  title: string;\n}\n\nconst ProgressBar: React.FC<Props> = ({ title, percentage }) => (\n  <Styled.ProgressBar>\n    <Styled.Content>\n      <Styled.Title>{title}</Styled.Title>\n      <Styled.Percentage>{percentage}%</Styled.Percentage>\n    </Styled.Content>\n    <Styled.BarWrapper>\n      <Styled.Bar percentage={percentage} />\n    </Styled.BarWrapper>\n  </Styled.ProgressBar>\n);\n\nexport default ProgressBar;\n","import styled from 'styled-components';\nimport tw from 'tailwind.macro';\n\nexport const Skills = styled.div`\n  ${tw`flex flex-wrap w-full`};\n`;\n\nexport const Skill = styled.div`\n  ${tw`w-full sm:w-1/2`};\n`;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Container from 'components/ui/Container';\nimport TitleSection from 'components/ui/TitleSection';\nimport ProgressBar from 'components/ui/ProgressBar';\n\nimport { SectionTitle } from 'helpers/definitions';\n\nimport * as Styled from './styles';\n\ninterface Skill {\n  node: {\n    id: string;\n    frontmatter: {\n      title: string;\n      percentage: number;\n    };\n  };\n}\n\nconst Skills: React.FC = () => {\n  const { markdownRemark, allMarkdownRemark } = useStaticQuery(graphql`\n    query {\n      markdownRemark(frontmatter: { category: { eq: \"skills section\" } }) {\n        frontmatter {\n          title\n          subtitle\n        }\n      }\n      allMarkdownRemark(filter: { frontmatter: { category: { eq: \"skills\" } } }, sort: { fields: fileAbsolutePath }) {\n        edges {\n          node {\n            id\n            frontmatter {\n              title\n              percentage\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const sectionTitle: SectionTitle = markdownRemark.frontmatter;\n  const skills: Skill[] = allMarkdownRemark.edges;\n\n  return (\n    <Container section>\n      <TitleSection title={sectionTitle.title} subtitle={sectionTitle.subtitle} center />\n      <Styled.Skills>\n        {skills.map((item) => {\n          const {\n            id,\n            frontmatter: { title, percentage }\n          } = item.node;\n\n          return (\n            <Styled.Skill key={id}>\n              <ProgressBar title={title} percentage={percentage} />\n            </Styled.Skill>\n          );\n        })}\n      </Styled.Skills>\n    </Container>\n  );\n};\n\nexport default Skills;\n","import React from 'react';\n\nimport Layout from 'components/Layout';\nimport SEO from 'components/SEO';\nimport Experience from 'components/Experience';\nimport Education from 'components/Education';\nimport Skills from 'components/Skills';\nimport HeroBanner from 'components/HeroBanner';\n\nconst ResumePage: React.FC = () => (\n  <Layout>\n    <SEO title=\"Resume\" />\n    <HeroBanner hideProfileButton={true}/>\n    <hr />\n    <Skills />\n    <hr />\n    <Experience />\n    <hr />\n    <Education />\n    \n    \n  </Layout>\n);\n\nexport default ResumePage;\n","import styled from 'styled-components';\nimport tw from 'tailwind.macro';\nimport { motion } from 'framer-motion';\n\nexport interface StyledProps {\n  primary?: boolean;\n  block?: boolean;\n}\n\nexport const Button = motion.custom(styled.button<StyledProps>`\n  outline: none !important;\n  ${tw`py-2 px-8 rounded-full border border-teal-300 text-indigo-900`};\n\n  ${({ primary }) => (primary ? tw`bg-teal-300` : tw`text-indigo-600`)};\n\n  ${({ block }) => block && tw`w-full`};\n`);\n","import React from 'react';\n\nimport * as Styled from './styles';\n\ninterface Props extends Styled.StyledProps {\n  children: React.ReactNode;\n}\n\nconst Button: React.FC<Props & React.ButtonHTMLAttributes<HTMLButtonElement>> = ({ primary, block, children }) => (\n  <Styled.Button primary={primary} block={block} whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>\n    {children}\n  </Styled.Button>\n);\n\nexport default Button;\n","import styled from 'styled-components';\nimport tw from 'tailwind.macro';\n\nexport const Banner = styled.section`\n  ${tw`bg-gray-100 border-b border-indigo-100 `};\n`;\n\nexport const Content = styled.p`\n  ${tw`mb-8`};\n`;\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport Container from 'components/ui/Container';\nimport Button from 'components/ui/Button';\nimport TitleSection from 'components/ui/TitleSection';\n\nimport * as Styled from './styles';\n\ninterface Props {\n  title: string;\n  subtitle?: string;\n  content: React.ReactNode;\n  linkTo: string;\n  linkText: string;\n  hideLink: boolean;\n}\n\nconst Banner: React.FC<Props> = ({ title, subtitle, content, linkTo, linkText, hideLink = false }) => (\n  <Styled.Banner>\n    <Container section>\n      <TitleSection title={title} subtitle={subtitle} />\n      <Styled.Content>{content}</Styled.Content>\n      {!hideLink ? <Link to={linkTo}>\n        <Button primary>{linkText}</Button>\n      </Link> : null}\n    </Container>\n  </Styled.Banner>\n);\n\nexport default Banner;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Banner from 'components/ui/Banner';\n\nimport { SectionTitle } from 'helpers/definitions';\nimport FormatHtml from 'components/utils/FormatHtml';\n\ninterface SectionHeroBanner extends SectionTitle {\n  content: string;\n  linkTo: string;\n  linkText: string;\n}\n\ninterface HeroBanner {\n  html: React.ReactNode;\n  frontmatter: SectionHeroBanner;\n};\n\ninterface Props {\n  hideProfileButton: boolean;\n}\nconst HeroBanner: React.FC<Props> = ({hideProfileButton = false}) => {\n  const { markdownRemark } = useStaticQuery(graphql`\n    query {\n      markdownRemark(frontmatter: { category: { eq: \"hero section\" } }) {\n        html\n        frontmatter {\n          title\n          subtitle\n          content\n          linkTo\n          linkText\n        }\n      }\n    }\n  `);\n  const {html, frontmatter}: HeroBanner = markdownRemark;\n\n  return (\n    <Banner\n      title={frontmatter.title}\n      subtitle={frontmatter.subtitle}\n      content={<FormatHtml content={html} />}\n      linkTo={frontmatter.linkTo}\n      linkText={frontmatter.linkText}\n      hideLink={hideProfileButton}\n    />\n  );\n};\n\nexport default HeroBanner;\n","import React, { ReactNode } from 'react';\n\ninterface Props {\n  content: any;\n}\n\nconst FormatHtml: React.FC<Props> = ({ content }) => (\n  <span\n    className=\"format-html\"\n    dangerouslySetInnerHTML={{\n      __html: content\n    }}\n  />\n);\n\nexport default FormatHtml;\n"],"sourceRoot":""}