{"version":3,"file":"component---src-pages-blogs-js-6ffb091f5a43c86fb089.js","mappings":"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","sources":["webpack://portfolio/./src/utils/readingTime.js","webpack://portfolio/./src/pages/blogs.js","webpack://portfolio/./src/components/Header.js","webpack://portfolio/./src/components/SkipLink.js","webpack://portfolio/./src/utils/accessibility.js","webpack://portfolio/./src/components/layout.js","webpack://portfolio/./src/context/ThemeContext.js"],"sourcesContent":["// Simple reading time calculator\nexport const calculateReadingTime = (text) => {\n  if (!text) return '1 min read';\n  \n  const wordsPerMinute = 200;\n  const words = text.trim().split(/\\s+/).length;\n  const readingTimeMinutes = Math.ceil(words / wordsPerMinute);\n  \n  return `${readingTimeMinutes} min read`;\n};\n","import React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport Layout from '../components/layout';\nimport { calculateReadingTime } from '../utils/readingTime';\n\nconst BlogsPage = ({ data }) => {\n  const posts = data.allMarkdownRemark.edges;\n\n  return (\n    <Layout>\n      <div className=\"bg-slate-50 dark:bg-slate-900 min-h-screen py-12 md:py-16 lg:py-20 transition-colors duration-200\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n          {/* Header */}\n          <div className=\"text-center mb-12 md:mb-16\">\n            <h1 className=\"text-4xl md:text-5xl lg:text-6xl font-bold text-slate-900 dark:text-white mb-6\">\n              Blog\n            </h1>\n            <p className=\"text-xl text-slate-600 dark:text-slate-400 max-w-2xl mx-auto\">\n              Insights on software development, engineering practices, and lessons learned building scalable applications.\n            </p>\n          </div>\n\n          {/* Blog Posts */}\n          {posts.length > 0 ? (\n            <div className=\"space-y-8\">\n              {posts.map(({ node }) => (\n                <article \n                  key={node.id} \n                  className=\"bg-white dark:bg-slate-800 border border-slate-200 dark:border-slate-700 rounded-xl shadow-sm hover:shadow-md dark:shadow-none transition-all duration-300 p-6 md:p-8 group\"\n                >\n                  <div className=\"flex flex-col sm:flex-row sm:items-start gap-4\">\n                    <div className=\"flex-1\">\n                      {/* Date and Reading Time */}\n                      <div className=\"flex items-center text-sm text-slate-500 dark:text-slate-400 mb-3\">\n                        <time dateTime={node.frontmatter.date}>\n                          {new Date(node.frontmatter.date).toLocaleDateString('en-US', {\n                            year: 'numeric',\n                            month: 'long',\n                            day: 'numeric'\n                          })}\n                        </time>\n                        <span className=\"mx-2\">•</span>\n                        <span>{calculateReadingTime(node.excerpt)}</span>\n                      </div>\n\n                      {/* Title */}\n                      <h2 className=\"text-2xl md:text-3xl font-bold text-slate-900 dark:text-white mb-4 group-hover:text-accent-600 dark:group-hover:text-accent-300 transition-colors duration-200\">\n                        <Link to={node.fields.slug} className=\"hover:text-accent-600 dark:hover:text-accent-300\">\n                          {node.frontmatter.title}\n                        </Link>\n                      </h2>\n\n                      {/* Excerpt */}\n                      <p className=\"text-slate-700 dark:text-slate-300 text-lg leading-relaxed mb-4\">\n                        {node.excerpt}\n                      </p>\n\n                      {/* Tags */}\n                      {node.frontmatter.tags && node.frontmatter.tags.length > 0 && (\n                        <div className=\"flex flex-wrap gap-2 mb-4\">\n                          {node.frontmatter.tags.map((tag, index) => (\n                            <span \n                              key={index}\n                              className=\"px-3 py-1 bg-accent-100 dark:bg-accent-900/30 text-accent-700 dark:text-accent-300 text-sm rounded-full font-medium\"\n                            >\n                              {tag}\n                            </span>\n                          ))}\n                        </div>\n                      )}\n\n                      {/* Read More Link */}\n                      <Link \n                        to={node.fields.slug}\n                        className=\"inline-flex items-center text-accent-600 hover:text-accent-700 dark:text-accent-300 dark:hover:text-accent-200 font-medium transition-colors duration-200 group\"\n                      >\n                        Read full article\n                        <span className=\"ml-2 transition-transform duration-200 group-hover:translate-x-1\">→</span>\n                      </Link>\n                    </div>\n                  </div>\n                </article>\n              ))}\n            </div>\n          ) : (\n            <div className=\"text-center py-12\">\n              <p className=\"text-xl text-slate-600 dark:text-slate-400\">\n                No blog posts found. Check back soon for new content!\n              </p>\n            </div>\n          )}\n\n          {/* Back to Home */}\n          <div className=\"text-center mt-12\">\n            <Link \n              to=\"/\"\n              className=\"inline-flex items-center text-accent-600 hover:text-accent-700 dark:text-accent-300 dark:hover:text-accent-200 font-medium transition-colors duration-200 group\"\n            >\n              <span className=\"mr-2 transition-transform duration-200 group-hover:-translate-x-1\">←</span>\n              Back to Home\n            </Link>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default BlogsPage;\n\n// Head export for SEO\nexport const Head = () => (\n  <>\n    <title>Blog | Portfolio</title>\n    <meta name=\"description\" content=\"Insights on software development, engineering practices, and lessons learned building scalable applications.\" />\n    <meta name=\"keywords\" content=\"blog, software development, engineering, web development, programming\" />\n    <meta property=\"og:title\" content=\"Blog\" />\n    <meta property=\"og:description\" content=\"Insights on software development, engineering practices, and lessons learned building scalable applications.\" />\n    <meta property=\"og:type\" content=\"website\" />\n  </>\n);\n\n// GraphQL query to fetch all blog posts\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"/src/pages/blogs/\" }\n        frontmatter: { published: { ne: false } }\n      }\n      sort: { frontmatter: { date: DESC } }\n    ) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 200)\n          fields {\n            slug\n          }\n          frontmatter {\n            date\n            title\n            tags\n          }\n        }\n      }\n    }\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'gatsby';\n\nconst Header = () => {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [scrolled, setScrolled] = useState(false);\n  const [mounted, setMounted] = useState(false);\n  const [isDarkMode, setIsDarkMode] = useState(false);\n\n  // After component mounts, check the actual HTML class\n  useEffect(() => {\n    setMounted(true);\n    \n    // Use the actual HTML class to determine theme\n    if (typeof document !== 'undefined') {\n      setIsDarkMode(document.documentElement.classList.contains('dark'));\n    }\n  }, []);\n\n  // Add observer for HTML class changes\n  useEffect(() => {\n    if (!mounted) return;\n    \n    // Function to check HTML class\n    const updateDarkModeState = () => {\n      if (typeof document !== 'undefined') {\n        setIsDarkMode(document.documentElement.classList.contains('dark'));\n      }\n    };\n    \n    // Watch for class changes on the HTML element\n    if (typeof MutationObserver !== 'undefined' && typeof document !== 'undefined') {\n      const observer = new MutationObserver((mutations) => {\n        mutations.forEach((mutation) => {\n          if (mutation.type === 'attributes' && mutation.attributeName === 'class') {\n            updateDarkModeState();\n          }\n        });\n      });\n      \n      observer.observe(document.documentElement, { attributes: true });\n      return () => observer.disconnect();\n    }\n  }, [mounted]);\n\n  // Add scroll listener for header background\n  useEffect(() => {\n    const handleScroll = () => {\n      setScrolled(window.scrollY > 20);\n    };\n    \n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  // Use the global toggleTheme function\n  const handleThemeToggle = () => {\n    if (typeof window !== 'undefined' && typeof window.toggleTheme === 'function') {\n      window.toggleTheme();\n    }\n  };\n\n  return (\n    // Header with conditional classes based on scroll position\n    <header className={`fixed top-0 left-0 right-0 z-50 transition-all duration-200 ${\n      scrolled \n        ? 'bg-[#faf9f6]/90 dark:bg-slate-900/90 shadow-sm dark:shadow-slate-800/20 backdrop-blur-lg border-b border-slate-200 dark:border-slate-700/50' \n        : 'bg-transparent dark:bg-transparent'\n    }`}>\n      <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between items-center h-16\">\n          <div className=\"flex-shrink-0\">\n            <Link to=\"/\" className=\"text-xl font-bold text-slate-900 dark:text-white hover:text-accent dark:hover:text-accent transition duration-150 ease-in-out\">\n              Sanjay Panda\n            </Link>\n          </div>\n          \n          {/* Desktop navigation - friendlier style */}\n          <div className=\"hidden md:flex md:items-center md:space-x-3\">\n            {/* Rounded nav items with friendly hover effect */}\n            <Link to=\"/#mission\" className=\"text-slate-700 dark:text-slate-300 hover:text-accent dark:hover:text-accent px-4 py-2 rounded-full text-sm font-medium transition-all duration-150 ease-in-out hover:bg-slate-100 dark:hover:bg-slate-800/70\">My Mission</Link>\n            <Link to=\"/blogs\" className=\"text-slate-700 dark:text-slate-300 hover:text-accent dark:hover:text-accent px-4 py-2 rounded-full text-sm font-medium transition-all duration-150 ease-in-out hover:bg-slate-100 dark:hover:bg-slate-800/70\">Blog</Link>\n            <Link to=\"/#youtube\" className=\"text-slate-700 dark:text-slate-300 hover:text-accent dark:hover:text-accent px-4 py-2 rounded-full text-sm font-medium transition-all duration-150 ease-in-out hover:bg-slate-100 dark:hover:bg-slate-800/70\">YouTube</Link>\n            <Link to=\"/#connect\" className=\"text-slate-700 dark:text-slate-300 hover:text-accent dark:hover:text-accent px-4 py-2 rounded-full text-sm font-medium transition-all duration-150 ease-in-out hover:bg-slate-100 dark:hover:bg-slate-800/70\">Connect</Link>\n            \n            {/* Desktop theme toggle button - friendlier style */}\n            {mounted && (\n              <button\n                onClick={handleThemeToggle}\n                className=\"ml-2 p-2 rounded-full text-slate-700 dark:text-slate-400 hover:text-accent dark:hover:text-accent focus:outline-none focus:ring-2 focus:ring-accent/50 hover:bg-slate-100 dark:hover:bg-slate-800/70 transition duration-150 ease-in-out\"\n                aria-label={`Switch to ${isDarkMode ? 'light' : 'dark'} mode`}\n                data-theme-toggle=\"true\"\n                id=\"theme-toggle-desktop\"\n              >\n                {!isDarkMode ? (\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={2}>\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\" />\n                  </svg>\n                ) : (\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={2}>\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\" />\n                  </svg>\n                )}\n              </button>\n            )}\n          </div>\n          \n          {/* Mobile menu button and theme toggle */}\n          <div className=\"md:hidden flex items-center\">\n            {/* Mobile theme toggle button - friendlier style */}\n            {mounted && (\n              <button\n                onClick={handleThemeToggle}\n                className=\"p-2 mr-2 rounded-full text-slate-700 dark:text-slate-400 hover:text-accent dark:hover:text-accent focus:outline-none hover:bg-slate-100 dark:hover:bg-slate-800/70 transition duration-150 ease-in-out\"\n                aria-label={`Switch to ${isDarkMode ? 'light' : 'dark'} mode`}\n                data-theme-toggle=\"true\"\n                id=\"theme-toggle-mobile\"\n              >\n                {!isDarkMode ? (\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={2}>\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\" />\n                  </svg>\n                ) : (\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={2}>\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\" />\n                  </svg>\n                )}\n              </button>\n            )}\n            \n            {/* Mobile menu button - friendly style */}\n            <button\n              onClick={() => setIsMenuOpen(!isMenuOpen)}\n              className=\"text-slate-700 dark:text-slate-400 hover:text-accent dark:hover:text-accent p-2 rounded-full focus:outline-none hover:bg-slate-100 dark:hover:bg-slate-800/70 transition duration-150 ease-in-out\"\n            >\n              <span className=\"sr-only\">Open main menu</span>\n              <svg className=\"h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 6h16M4 12h16M4 18h16\" />\n              </svg>\n            </button>\n          </div>\n        </div>\n      </div>\n      \n      {/* Mobile menu, show/hide based on menu state */}\n      <div className={`md:hidden transition-all duration-300 ease-in-out ${isMenuOpen ? 'max-h-96 opacity-100' : 'max-h-0 opacity-0 overflow-hidden'}`}>\n        <div className=\"px-2 pt-2 pb-3 space-y-1 sm:px-3 bg-[#faf9f6] dark:bg-slate-900 border-t border-slate-200 dark:border-slate-700 rounded-b-xl shadow-lg\">\n          {/* Mobile links - friendly style */}\n          <Link to=\"/#mission\" className=\"text-slate-700 dark:text-slate-300 hover:bg-slate-100 dark:hover:bg-slate-800 hover:text-accent dark:hover:text-accent block px-4 py-2 rounded-xl text-base font-medium transition duration-150 ease-in-out\">My Mission</Link>\n          <Link to=\"/blogs\" className=\"text-slate-700 dark:text-slate-300 hover:bg-slate-100 dark:hover:bg-slate-800 hover:text-accent dark:hover:text-accent block px-4 py-2 rounded-xl text-base font-medium transition duration-150 ease-in-out\">Blog</Link>\n          <Link to=\"/#youtube\" className=\"text-slate-700 dark:text-slate-300 hover:bg-slate-100 dark:hover:bg-slate-800 hover:text-accent dark:hover:text-accent block px-4 py-2 rounded-xl text-base font-medium transition duration-150 ease-in-out\">YouTube</Link>\n          <Link to=\"/#connect\" className=\"text-slate-700 dark:text-slate-300 hover:bg-slate-100 dark:hover:bg-slate-800 hover:text-accent dark:hover:text-accent block px-4 py-2 rounded-xl text-base font-medium transition duration-150 ease-in-out\">Connect</Link>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { handleSkipLinkClick } from '../utils/accessibility';\n\nconst SkipLink = () => (\n  <a\n    href=\"#main-content\"\n    className=\"skip-link\"\n    onClick={(e) => {\n      e.preventDefault();\n      handleSkipLinkClick('main-content');\n    }}\n  >\n    Skip to main content\n  </a>\n);\n\nexport default SkipLink;","// Skip link handler for keyboard navigation\nexport const handleSkipLinkClick = (targetId) => {\n  const element = document.getElementById(targetId);\n  if (element) {\n    element.tabIndex = -1;\n    element.focus();\n  }\n};\n\n// Focus trap for modals and dialogs\nexport const createFocusTrap = (containerRef) => {\n  const focusableElements = containerRef.current?.querySelectorAll(\n    'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n  );\n  \n  if (!focusableElements?.length) return;\n\n  const firstFocusable = focusableElements[0];\n  const lastFocusable = focusableElements[focusableElements.length - 1];\n\n  const handleTabKey = (e) => {\n    if (e.key === 'Tab') {\n      if (e.shiftKey) {\n        if (document.activeElement === firstFocusable) {\n          lastFocusable.focus();\n          e.preventDefault();\n        }\n      } else {\n        if (document.activeElement === lastFocusable) {\n          firstFocusable.focus();\n          e.preventDefault();\n        }\n      }\n    }\n  };\n\n  return handleTabKey;\n};","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Header from './Header'\nimport { ThemeProvider } from '../context/ThemeContext' // Correct path\nimport SkipLink from './SkipLink'\n\nexport default ({ children }) => (\n    <StaticQuery\n        query={graphql`\n        query {\n            site {\n            siteMetadata {\n                title\n            }\n            }\n        }\n        `}\n        render={data => (\n            <ThemeProvider>\n                {/* The div below will have its background controlled by global styles based on dark class on html */}\n                <div className=\"min-h-screen bg-white dark:bg-slate-900 text-slate-900 dark:text-slate-300 transition-colors duration-200\">\n                    <SkipLink />\n                    {/* Pass site title if needed, or remove if Header doesn't use it */}\n                    <Header siteTitle={data.site.siteMetadata.title} />\n                    <div className=\"w-full mx-auto\">\n                        <main id=\"main-content\" tabIndex=\"-1\">\n                            {children}\n                        </main>\n                    </div>\n                    {/* Consider adding a Footer component here */}\n                </div>\n            </ThemeProvider>\n        )}\n    />\n)","import React, { createContext, useState, useEffect, useContext, useCallback } from 'react';\n\n// Check if window is defined (for SSR)\nconst isBrowser = typeof window !== 'undefined';\n\n// Helper to get the initial theme\nconst getInitialTheme = () => {\n  if (!isBrowser) return 'dark'; // Default for SSR\n  const savedTheme = localStorage.getItem('theme');\n  if (savedTheme) return savedTheme;\n  // Check initial class set by gatsby-browser.js or theme-toggle.js\n  if (document.documentElement.classList.contains('dark')) return 'dark';\n  return 'light'; // Default to light if no preference found\n};\n\n// Get the global toggle function if it exists\nconst globalToggleTheme = isBrowser ? window.toggleTheme : undefined;\n\nexport const ThemeContext = createContext({\n  theme: 'dark', // Default value\n  toggleTheme: () => { console.warn('ThemeProvider not found'); },\n});\n\nexport const useTheme = () => useContext(ThemeContext);\n\nexport const ThemeProvider = ({ children }) => {\n  const [theme, setTheme] = useState(getInitialTheme);\n  const [hasMounted, setHasMounted] = useState(false);\n\n  // Effect to ensure we only run client-side logic after mount\n  useEffect(() => {\n    setHasMounted(true);\n    // Set the initial class on mount based on state, just in case\n    // This might be redundant if gatsby-browser runs first, but ensures consistency\n    if (theme === 'dark') {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n  }, []);\n\n  // The function to toggle the theme\n  const toggleTheme = useCallback(() => {\n    if (!hasMounted) return; // Don't run on server or before mount\n\n    // Determine the new theme\n    const newTheme = theme === 'light' ? 'dark' : 'light';\n    \n    // Update React state\n    setTheme(newTheme);\n\n    // Call the global function to update <html> class and localStorage\n    if (globalToggleTheme) {\n      globalToggleTheme(); // Call the function from gatsby-browser.js\n    } else {\n      // Fallback if global function isn't found (shouldn't happen ideally)\n      console.warn('Global toggleTheme not found, attempting manual update.');\n      localStorage.setItem('theme', newTheme);\n      if (newTheme === 'dark') {\n        document.documentElement.classList.add('dark');\n      } else {\n        document.documentElement.classList.remove('dark');\n      }\n    }\n  }, [theme, hasMounted]);\n\n  // Optional: Add an effect to listen for storage changes from other tabs/windows\n  useEffect(() => {\n    if (!isBrowser || !hasMounted) return;\n\n    const handleStorageChange = (event) => {\n      if (event.key === 'theme' && event.newValue && event.newValue !== theme) {\n        setTheme(event.newValue);\n        // Update class just in case the global script didn't catch it\n        if (event.newValue === 'dark') {\n          document.documentElement.classList.add('dark');\n        } else {\n          document.documentElement.classList.remove('dark');\n        }\n      }\n    };\n\n    window.addEventListener('storage', handleStorageChange);\n    return () => window.removeEventListener('storage', handleStorageChange);\n\n  }, [theme, hasMounted]);\n\n  // Provide the current theme state and the toggle function\n  const value = { theme, toggleTheme };\n\n  return (\n    <ThemeContext.Provider value={value}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};"],"names":["calculateReadingTime","text","words","trim","split","length","Math","ceil","_ref","data","posts","allMarkdownRemark","edges","React","Layout","className","map","_ref2","node","key","id","dateTime","frontmatter","date","Date","toLocaleDateString","year","month","day","excerpt","Link","to","fields","slug","title","tags","tag","index","Head","name","content","property","Header","isMenuOpen","setIsMenuOpen","useState","scrolled","setScrolled","mounted","setMounted","isDarkMode","setIsDarkMode","useEffect","document","documentElement","classList","contains","MutationObserver","observer","mutations","forEach","mutation","type","attributeName","observe","attributes","disconnect","handleScroll","window","scrollY","addEventListener","removeEventListener","handleThemeToggle","toggleTheme","onClick","xmlns","fill","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","SkipLink","href","e","preventDefault","targetId","element","getElementById","tabIndex","focus","handleSkipLinkClick","children","StaticQuery","query","render","ThemeProvider","siteTitle","site","siteMetadata","isBrowser","getInitialTheme","savedTheme","localStorage","getItem","globalToggleTheme","undefined","ThemeContext","createContext","theme","console","warn","useTheme","useContext","setTheme","hasMounted","setHasMounted","add","remove","useCallback","newTheme","setItem","handleStorageChange","event","newValue","value","Provider"],"sourceRoot":""}